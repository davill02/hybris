INSERT_UPDATE Token; token[unique = true];
                   ; anyString           ;
INSERT_UPDATE CronJob; code[unique = true]     ; job(code)           ; singleExecutable; sessionLanguage(isocode)
                     ; changeTokenValueCronJob ; changeTokenValueJob ; false           ; en
INSERT_UPDATE Trigger; cronjob(code)[unique = true]; cronExpression
                     ; changeTokenValueCronJob     ; * 30 * * * ?

INSERT_UPDATE Script; code[unique = true]; active; content
                    ; clearoldconcerts   ; true  ; "import de.hybris.platform.cronjob.enums.*
import de.hybris.platform.servicelayer.cronjob.PerformResult
import de.hybris.platform.servicelayer.search.*
import de.hybris.platform.servicelayer.model.*
import de.hybris.platform.catalog.enums.ArticleApprovalStatus
import concerttours.model.ConcertModel

searchService = spring.getBean('flexibleSearchService')
modelService = spring.getBean('modelService')
query = new FlexibleSearchQuery('Select {pk} from {Concert}');
searchService.search(query).getResult().each {
  if (it.daysUntil < 1)
  {
    it.approvalStatus = ArticleApprovalStatus.CHECK
  }
  modelService.saveAll()
}"
INSERT_UPDATE ScriptingJob; code[unique = true] ; scriptURI
                          ; clearoldconcertsJob ; model://clearoldconcerts
INSERT_UPDATE CronJob; code[unique = true]     ; job(code)           ; sessionLanguage(isocode)
                     ; clearoldconcertsCronJob ; clearoldconcertsJob ; en
INSERT_UPDATE Trigger; cronjob(code)[unique = true]; cronExpression
#% afterEach: impex.getLastImportedItem().setActivationTime(new Date());
                     ; clearoldconcertsCronJob     ; 0/10 * * * * ?